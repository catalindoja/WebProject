# Generated by Django 4.0.3 on 2022-04-30 14:28

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_veterinary', models.BooleanField(default=False)),
                ('is_visitor', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('worker_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('age', models.IntegerField()),
                ('address', models.CharField(max_length=80)),
                ('postalcode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Zoo',
            fields=[
                ('zoo_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_visitors', models.DecimalField(decimal_places=0, max_digits=8, verbose_name='Max amount of visitors')),
                ('address', models.CharField(max_length=80)),
                ('postalcode', models.DecimalField(decimal_places=0, max_digits=8, verbose_name='Postal code')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('worker_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='zooproject.worker')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('assigned_habitat', models.CharField(default='Dolphins', max_length=80)),
            ],
            bases=('zooproject.worker',),
        ),
        migrations.CreateModel(
            name='Veterinary',
            fields=[
                ('worker_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='zooproject.worker')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('number_assigned_animals', models.IntegerField()),
            ],
            bases=('zooproject.worker',),
        ),
        migrations.AddField(
            model_name='worker',
            name='zoo_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zooproject.zoo'),
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=40)),
                ('telephone', models.DecimalField(decimal_places=0, max_digits=9)),
                ('email', models.EmailField(max_length=254)),
                ('age', models.DecimalField(decimal_places=0, max_digits=3)),
                ('dateLatestVisit', models.DateField(default=datetime.date.today)),
                ('zoo_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zooproject.zoo')),
            ],
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('animal_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('zoo_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zooproject.zoo')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zooproject.staff')),
                ('veterinary_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zooproject.veterinary')),
            ],
        ),
    ]
